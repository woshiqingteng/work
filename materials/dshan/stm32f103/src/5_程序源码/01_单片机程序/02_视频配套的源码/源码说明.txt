[02]_从0设计电子产品的流程
	key_led             : 使用按键控制LED
	
[03]_搭建开发环境及练习第1个程序
	0301_led            : LED闪烁
	
[05]_GPIO操作
	0501_led            : LED闪烁
	0501_led_empty      : 还没使用cubemx初始化LED引脚,为了和0501_led进行比较
	0502_led_register   : 不使用HAL函数,直接操作GPIOC_ODR寄存器来控制LED
	0503_led_register2  : 不使用HAL函数,直接操作GPIOC_BSRR寄存器来控制LED
	0504_c_pointer      : 演示指针的用法
	0505_struct_pointer : 演示结构体指针的用法,用来操作GPIO寄存器
	0506_key_led_cubemx : 使用按键控制LED,按键的初始化代码是cubemx生成的
	0507_key_led_manual : 使用按键控制LED,按键的初始化代码是手写的
	0508_light_beep     : 使用光敏电阻控制LED、蜂鸣器
	
[06]_GPIO中断	
	0601_key_isr           : 使用按键中断控制LED
	0602_key_isr_oled      : 使用OLED显示调试信息
	0603_key_timer         : 使用软件定时器消除抖动
	0604_key_circle_buffer : 使用环形缓冲区防止按键丢失

[07]_串口(UART)	
	0701_uart_poll         : 使用查询方式读写串口
	0702_uart_interrupt    : 使用中断方式读写串口
	0703_uart_circle_buffer: 使用环形缓冲区防止数据丢失
	0704_uart_dma          : 使用DMA方式发送数据
	0705_uart_dma_idle     : 使用DMA+IDLE方式接收数据
	0706_uart_stdio        : 实现了printf,scanf

[08]_I2C	
	0801_i2c_hal_poll      : 使用查询方式访问I2C设备MPU6050
	0802_i2c_hal_int       : 使用中断方式访问I2C设备MPU6050
	0804_i2c_chinese       : 在OLED上显示汉字

[09]_SPI
	0901_spi_flash         : 读写SPI Flash

[10]_定时器	
	1001_systick_high_precision : 基于SysTick实现高精度计时
	1002_timer_high_precision   : 基于Timer实现高精度计时
	1003_pwm_color_led          : 使用定时器的PWM功能控制三色灯
	
	